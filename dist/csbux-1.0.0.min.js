/*! csbux - v1.0.0 (Targaryen) - 2015-06-28  Copyright (c) 2015 Cristian Birladeanu aka csbux, https://github.com/csbux/angular */"use strict";var module=angular.module("csbux.directives.dts",[]);module.directive("dtsDraggable",["$rootScope",function($rootScope){return{restrict:"A",link:function(scope,el,attrs,controller){angular.element(document).ready(function(){angular.element(el).attr("draggable","true"),el.bind("dragstart",function(e){e.dataTransfer.effectAllowed="move";var dtsId=angular.element(el).attr("data-dtsId");e.dataTransfer.setData("dragId",dtsId),localStorage.dtsDragId=dtsId,$rootScope.$emit("DTS-START-DRAG")}),el.bind("dragend",function(e){$rootScope.$emit("DTS-END-DRAG")})})}}}]),module.directive("dtsDropObject",["$rootScope",function($rootScope){return{restrict:"A",scope:{onDrag:"&"},link:function(scope,el,attrs,controller){angular.element(document).ready(function(){$rootScope.enteredTabId=null,el.bind("dragover",function(e){return e.preventDefault&&e.preventDefault(),!1}),el.bind("dragenter",function(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation();var newId=angular.element(e.target).attr("data-dtsId");newId||(newId=angular.element(e.target).parent().attr("data-dtsId")),newId||(newId=angular.element(e.target).parent().attr("data-dtsId")),newId&&newId!=$rootScope.enteredTabId&&newId!=localStorage.dtsDragId&&($rootScope.enteredTabId=newId,scope.onDrag({dragEl:localStorage.dtsDragId,dropEl:$rootScope.enteredTabId}))}),el.bind("dragleave",function(e){}),el.bind("drop",function(e){e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),$rootScope.$emit("DTS-END-DRAG")}),$rootScope.$on("DTS-START-DRAG",function(){angular.element(el).addClass("dts-target")}),$rootScope.$on("DTS-END-DRAG",function(){angular.element(el).removeClass("dts-target")})})}}}]),module.controller("ModalInstanceCtrl",["$scope","$modalInstance","tabs","newTab","selectedTab",function($scope,$modalInstance,tabs,newTab,selectedTab){newTab?($scope.shortenedId="Bogus text",$scope.defaultName="Tab-"+$scope.shortenedId,$scope.defaultContent="content-"+$scope.shortenedId):($scope.defaultName=selectedTab.title,$scope.defaultContent=selectedTab.content),$scope.tab={name:$scope.defaultName,content:$scope.defaultContent},$scope.ok=function(tab){$modalInstance.close(tab)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),module.directive("csbuxDts",["$sce","$modal",function($sce,$modal){return{restrict:"E",scope:{tabs:"=dts"},controller:function($scope){$scope.dragged=function(dragEl,dropEl){$scope.dragEl=dragEl,$scope.dropEl=dropEl,$scope.$apply(function(){$scope.dragTabOrder=$scope.tabs[$scope.dragEl].order,$scope.tabs[$scope.dragEl].order=$scope.tabs[$scope.dropEl].order,$scope.tabs[$scope.dropEl].order=$scope.dragTabOrder,localStorage.dtsDragId=parseInt(localStorage.dtsDragId)+parseInt($scope.dropEl)-parseInt($scope.dragEl),angular.forEach($scope.tabs,function(tab,index){tab.active=!1,tab.order==$scope.tabs[$scope.dragEl].order&&(tab.active=!0)}),$scope.tabs.sort(function(tabA,tabB){return tabA.order-tabB.order})})},$scope.addTab=function(){$scope.selectedTabIndex=-1,angular.forEach($scope.tabs,function(tab,index){tab.active&&($scope.selectedTabIndex=index)}),$scope.newTab=!0,setTimeout(function(){var modalInstance=$modal.open({animation:!0,templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:"",resolve:{tabs:function(){return $scope.tabs},newTab:function(){return $scope.newTab},selectedTab:function(){return null}}});modalInstance.result.then(function(tab){$scope.addActive=!1,angular.forEach($scope.tabs,function(tab){tab.active=!1}),$scope.order=$scope.tabs.length,$scope.tabs.push({title:tab.name,content:tab.content,active:!0,toRemove:!1,toEdit:!1,order:$scope.order})},function(error){$scope.addActive=!1,angular.forEach($scope.tabs,function(tab){tab.active=!1}),$scope.tabs[$scope.selectedTabIndex].active=!0})})},$scope.removeTab=function(){$scope.tabs.length>1&&($scope.selectedTabIndex=-1,angular.forEach($scope.tabs,function(tab,index){tab.toRemove&&($scope.selectedTabIndex=index)}),$scope.tabs[$scope.selectedTabIndex].active=!1,$scope.tabs.splice($scope.selectedTabIndex,1),0==$scope.selectedTabIndex?$scope.tabs[1].active=!0:$scope.tabs[$scope.selectedTabIndex-1].active=!0,$scope.newOrder=0,angular.forEach($scope.tabs,function(tab,index){tab.order=$scope.newOrder,$scope.newOrder++}))},$scope.editTab=function(){$scope.selectedTabIndex=-1,angular.forEach($scope.tabs,function(tab,index){tab.toEdit&&($scope.selectedTabIndex=index,tab.toEdit=!1)}),$scope.newTab=!1,$scope.selectedTab=$scope.tabs[$scope.selectedTabIndex],setTimeout(function(){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:"",resolve:{tabs:function(){return $scope.tabs},newTab:function(){return $scope.newTab},selectedTab:function(){return $scope.selectedTab}}});modalInstance.result.then(function(tab){$scope.selectedTab.title=tab.name,$scope.selectedTab.content=tab.content},function(error){})})}},templateUrl:"templates/dts/csbux-dts-template.html"}}]),angular.module("csbux.directives.dts").run(["$templateCache",function($templateCache){$templateCache.put("templates/dts/csbux-dts-template.html",'<tabset>									\n	<tab ng-repeat="tab in tabs | orderBy:\'order\'" active="tab.active">		\n		<tab-heading>				\n			<div>\n				<div dts-drop-object="true" x-on-drag="dragged(dragEl, dropEl)" data-dtsId="{{$index}}" class="inlineDiv">\n					<span>{{tab.title}}</span>											\n				</div>\n				<div class="inlineDiv">\n					<a href="{{tab.title}}" ng-click="" ng-show="tabs.length > 1" class="iconSeparator" dts-draggable="true" data-dtsId="{{$index}}" ng-hide="tab.isPlaceholder">\n						<span class="glyphicon glyphicon-transfer"></span>										\n					</a>\n					<a href="#" ng-click="tab.toEdit = true; editTab()" class="iconSeparator" ng-hide="tab.isPlaceholder">\n						<span class="glyphicon glyphicon-edit"></span>										\n					</a>\n					<a href="#" ng-click="tab.toRemove = true; removeTab()" ng-show="tabs.length > 1" class="iconSeparator" ng-hide="tab.isPlaceholder">\n						<span class="glyphicon glyphicon-remove"></span>										\n					</a>				\n				</div>				\n			</div>									\n		</tab-heading>\n		<div ng-include src="tab.content"></div>			\n	</tab>									\n	<tab select="addTab()" active="addActive">\n		<tab-heading>		\n			<div>\n				<span class="glyphicon glyphicon-plus"></span>		\n			</div>\n		</tab-heading>      \n\n		<script type="text/ng-template" id="myModalContent.html">\n			<div class="modal-header">\n				<h3 class="modal-title">Add a new tab</h3>\n			</div>\n			<div class="modal-body">\n				<form name="myForm" class="form-horizontal">\n					<div class="form-group">\n						<label class="control-label col-sm-2" for="name">Name:</label>\n						<div class="col-sm-10">\n							<input class="form-control" name="name" placeholder="Enter name" ng-model="tab.name" required>														\n							<br />\n							<div ng-show="myForm.name.$touched">\n								<span ng-show="myForm.name.$error.required">Tell me the tab name.</span>															\n							</div>														\n						</div>\n					</div>\n					<div class="form-group">\n						<label class="control-label col-sm-2" for="content">Content:</label>\n						<div class="col-sm-10">\n							<input class="form-control" name="content" placeholder="Enter content" ng-model="tab.content" required>					\n							<br />\n							<div ng-show="myForm.content.$touched">\n								<span ng-show="myForm.content.$error.required">Tell me about the tab content.</span>								\n							</div>														\n						</div>\n					</div>									            	   									            	   \n				</form>\n			</div>\n			<div class="modal-footer">\n				<button type="submit" class="btn btn-primary" ng-click="ok(tab)" ng-keyup="$event.keyCode == 13 ? ok(tab) : null">OK</button>\n				<button class="btn btn-warning" ng-click="cancel()">Cancel</button>\n			</div>\n		</script>\n	</tab>\n</tabset>\n')}]);